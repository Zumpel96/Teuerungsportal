@using Teuerungsportal.Models
@using Color = MudBlazor.Color
@using Size = MudBlazor.Size
@using System.Drawing
<MudTable Items="@PriceChanges" Hover="true" Loading="@IsLoading" Virtualize="@Virtualize" LoadingProgressColor="Color.Primary">
    <HeaderContent>
        @if (!HideDate)
        {
            <MudTh>@L?["changeDateTime"]</MudTh>
        }
        @if (!HideName)
        {
            <MudTh>@L?["productName"]</MudTh>
        }
        @if (!HideCategory)
        {
            <MudTh>@L?["category"]</MudTh>
        }
        @if (!HideBrand)
        {
            <MudTh>@L?["brand"]</MudTh>
        }
        @if (!HideStore)
        {
            <MudTh>@L?["store"]</MudTh>
        }
        <MudTh>@L?["price"]</MudTh>
        <MudTh>@L?["priceChange"]</MudTh>
        <MudTh></MudTh>
        @if (!HideDetails)
        {
            <MudTh></MudTh>
        }
    </HeaderContent>
    <RowTemplate>
        @if (!HideDate)
        {
            <MudTd Class="responsive-table-text" DataLabel="@L?["changeDateTime"]">@context.TimeStamp.ToString("dd.MM.yyyy")</MudTd>
        }
        @if (!HideName)
        {
            <MudTd Class="responsive-table-text" DataLabel="@L?["productName"]">@context.Product?.Name</MudTd>
        }
        @if (!HideCategory)
        {
            <MudTd Class="responsive-table-text" DataLabel="@L?["category"]">@context.Product?.Category?.Name</MudTd>
        }
        @if (!HideBrand)
        {
            <MudTd Class="responsive-table-text" DataLabel="@L?["brand"]">@context.Product?.Brand</MudTd>
        }
        @if (!HideStore)
        {
            <MudTd Class="responsive-table-text" DataLabel="@L?["store"]">
                @{
                    var translatedColor = ColorTranslator.FromHtml(context.Product?.Store?.Color ?? "#FFFFFF");
                    var color = $"color: {context.Product?.Store?.Color}; background-color: rgba({translatedColor.R}, {translatedColor.G}, {translatedColor.B}, 0.2)";
                }
                <MudChip Variant="Variant.Text" Color="Color.Primary" Style="@color">@context.Product?.Store?.Name</MudChip>
            </MudTd>
        }
        <MudTd Class="responsive-table-text" DataLabel="@L?["price"]">
            @($"{Math.Round(context.CurrentValue, 2):N2}€")
        </MudTd>
        <MudTd Class="responsive-table-text" DataLabel="@L?["priceChange"]">
            <div>
                @if (context.PreviousValue == null)
                {
                    <MudChip Variant="Variant.Text" Color="Color.Warning">@L?["new"]</MudChip>
                }
                else
                {
                    var priceChange = context.CurrentValue - (double)context.PreviousValue;
                    var percentageChange = (100 / (double)context.PreviousValue * context.CurrentValue) - 100;
                    var increased = priceChange > 0;
                    <MudChip Variant="Variant.Text" Color="@(!increased ? Color.Success : Color.Error)">
                        <div>
                            @if (increased)
                            {
                                <MudIcon Icon="@Icons.Material.Filled.ArrowUpward" Size="Size.Small"/>
                            }
                            else
                            {
                                <MudIcon Icon="@Icons.Material.Filled.ArrowDownward"/>
                            }
                        </div>

                        <MudText Typo="Typo.caption" Class="ml-1">@($"{Math.Abs(Math.Round(priceChange, 2)):N2}€ | {Math.Abs(Math.Round(percentageChange, 2)):N2}%")</MudText>
                    </MudChip>
                }
            </div>
        </MudTd>
        @if (!HideFavorite)
        {
            <MudTd Class="responsive-table-text">
                <MudIconButton Color="@(Favorites.Contains(context.Product!.Id) ? Color.Primary : Color.Default)" Icon="@Icons.Material.Filled.Favorite" OnClick="@(() => ToggleProductFavorite(context.Product))"/>
            </MudTd>
        }
        @if (!HideDetails)
        {
            <MudTd Class="responsive-table-text">
                <MudIconButton Icon="@Icons.Material.Filled.ArrowForwardIos" OnClick="@(() => ShowProductDetails(context.Product))"/>
            </MudTd>
        }
    </RowTemplate>
</MudTable>

@if (IsLoading)
{
    <MudSkeleton SkeletonType="SkeletonType.Rectangle" Width="100%" Height="24rem"/>
}