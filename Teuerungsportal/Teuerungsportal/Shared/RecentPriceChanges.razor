<MudTable Items="@PriceChanges" Hover="true">
    <HeaderContent>
        <MudTh>@L?["changeDateTime"]</MudTh>
        <MudTh>@L?["productName"]</MudTh>
        @if (!HideCategory)
        {
            <MudTh>@L?["categoryName"]</MudTh>
        }
        @if (!HideStore)
        {
            <MudTh>@L?["store"]</MudTh>
        }
        <MudTh>@L?["price"]</MudTh>
        <MudTh></MudTh>
        <MudTh></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="@L?["changeDateTime"]">@context.TimeStamp.ToShortDateString()</MudTd>
        <MudTd DataLabel="@L?["productName"]">@context.Product?.Name</MudTd>
        @if (!HideCategory)
        {
            <MudTd DataLabel="@L?["categoryName"]">@context.Product?.Category?.Name</MudTd>
        }
        @if (!HideStore)
        {
            <MudTd DataLabel="@L?["store"]">@context.Product?.Store?.Name</MudTd>
        }
        <MudTd DataLabel="@L?["price"]">@($"{Math.Round(context.Value, 2):N2}€")</MudTd>
        <MudTd>
            @if (context.LastValue == null)
            {
                <MudChip Variant="Variant.Text" Color="Color.Warning">@L?["new"]</MudChip>
            }
            else
            {
                var priceChange = context.Value - (double)context.LastValue;
                var percentageChange = (100 / (double)context.LastValue * context.Value) - 100;
                <MudChip Variant="Variant.Text" Color="@(priceChange < 0 ? Color.Success : Color.Error)">@($"{Math.Abs(Math.Round(priceChange, 2)):N2}€ | {Math.Abs(Math.Round(percentageChange, 2)):N2}%")</MudChip>
            }
        </MudTd>
        <MudTd>
            <MudIconButton Icon="@Icons.Material.Filled.ArrowForwardIos" OnClick="@(() => Redirect(context.Product))"/>
        </MudTd>
    </RowTemplate>
</MudTable>