@using Teuerungsportal.Models
<MudTable Items="@PriceChanges" Hover="true" Loading="@IsLoading">
    <HeaderContent>
        @if (!HideDate)
        {
            <MudTh>@L?["changeDateTime"]</MudTh>
        }
        <MudTh>@L?["productName"]</MudTh>
        @if (!HideCategory)
        {
            <MudTh>@L?["category"]</MudTh>
        }
        @if (!HideBrand)
        {
            <MudTh>@L?["brand"]</MudTh>
        }
        @if (!HideStore)
        {
            <MudTh>@L?["store"]</MudTh>
        }
        <MudTh>@L?["price"]</MudTh>
        <MudTh>@L?["priceChange"]</MudTh>
        <MudTh></MudTh>
    </HeaderContent>
    <RowTemplate>
        @if (!HideDate)
        {
            <MudTd Class="responsive-table-text" DataLabel="@L?["changeDateTime"]">@context.TimeStamp.ToString("dd.MM.yyyy HH:mm")</MudTd>
        }
        <MudTd Class="responsive-table-text" DataLabel="@L?["productName"]">@context.Product?.Name</MudTd>
        @if (!HideCategory)
        {
            <MudTd Class="responsive-table-text" DataLabel="@L?["category"]">
                @if (context.Product?.Category == null)
                {
                    <MudSelect Value="@SelectedCategory" Disabled="@(IsCategorizing || IsLoading)" T="Category?" Placeholder="@L?["addCategory"]" AnchorOrigin="Origin.BottomCenter" Variant="Variant.Outlined" AdornmentIcon="@Icons.Material.Filled.Search" AdornmentColor="Color.Primary" ValueChanged="@((Category? category) => AddCategory(context.Product!, category))">

                        <MudSelectItem Value="@(new Category() { Name = "newCategory" })">
                            @L?["createCategory"]
                        </MudSelectItem>

                        <MudSelectItem Value="@(new Category())" Disabled>
                            <MudDivider/>
                        </MudSelectItem>

                        @foreach (var category in AllCategories)
                        {
                            <CategoryVisualizer Category="@category" RecursionLevel="0"/>

                            @if (category != AllCategories.Last())
                            {
                                <MudSelectItem Value="@(new Category())" Disabled>
                                    <MudDivider/>
                                </MudSelectItem>
                            }
                        }
                    </MudSelect>
                }
                else
                {
                    @context.Product?.Category?.Name
                }
            </MudTd>
        }
        @if (!HideBrand)
        {
            <MudTd Class="responsive-table-text" DataLabel="@L?["brand"]">@context.Product?.Brand</MudTd>
        }
        @if (!HideStore)
        {
            <MudTd Class="responsive-table-text" DataLabel="@L?["store"]">@context.Product?.Store?.Name</MudTd>
        }
        <MudTd Class="responsive-table-text" DataLabel="@L?["price"]">
            @($"{Math.Round(context.CurrentValue, 2):N2}€")
        </MudTd>
        <MudTd Class="responsive-table-text" DataLabel="@L?["priceChange"]">
            <div>
                @if (context.PreviousValue == null)
                {
                    <MudChip Variant="Variant.Text" Color="Color.Warning">@L?["new"]</MudChip>
                }
                else
                {
                    var priceChange = context.CurrentValue - (double)context.PreviousValue;
                    var percentageChange = (100 / (double)context.PreviousValue * context.CurrentValue) - 100;
                    var increased = priceChange > 0;
                    <MudChip Variant="Variant.Text" Color="@(!increased ? Color.Success : Color.Error)">
                        <div>
                            @if (increased)
                            {
                                <MudIcon Icon="@Icons.Material.Filled.ArrowUpward" Size="Size.Small"/>
                            }
                            else
                            {
                                <MudIcon Icon="@Icons.Material.Filled.ArrowDownward"/>
                            }
                        </div>

                        <MudText Typo="Typo.caption" Class="ml-1">@($"{Math.Abs(Math.Round(priceChange, 2)):N2}€ | {Math.Abs(Math.Round(percentageChange, 2)):N2}%")</MudText>
                    </MudChip>
                }
            </div>
        </MudTd>
        <MudTd Class="responsive-table-text">
            <MudIconButton Icon="@Icons.Material.Filled.ArrowForwardIos" OnClick="@(() => Redirect(context.Product))"/>
        </MudTd>
    </RowTemplate>
    <PagerContent>
        @if (!HidePagination)
        {
            <MudPagination SelectedChanged="@OnPageChanged" BoundaryCount="2" MiddleCount="7" Count="@NumberOfPages" Class="pa-4" Disabled="IsLoading"/>
        }
    </PagerContent>
</MudTable>